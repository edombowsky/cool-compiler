Terminals unused in grammar

   IN
   LET
   ERROR


Rules useless in parser due to conflicts

   36 expr: '{' one_or_more_expr '}'


State 79 conflicts: 21 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class

    4 class: CLASS TYPEID '{' features_opt '}' ';'
    5      | CLASS TYPEID INHERITS TYPEID '{' features_opt '}' ';'

    6 features_opt: features
    7             | /* empty */

    8 features: feature ';'
    9         | features feature ';'

   10 feature: OBJECTID '(' formals ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID ':' TYPEID
   12        | OBJECTID ':' TYPEID ASSIGN expr

   13 formals: formal
   14        | formals ',' formal
   15        | /* empty */

   16 formal: OBJECTID ':' TYPEID

   17 expr: OBJECTID ASSIGN expr
   18     | expr '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   20     | OBJECTID '(' comma_sep_expr ')'
   21     | IF expr THEN expr ELSE expr FI
   22     | WHILE expr LOOP expr POOL
   23     | '{' one_or_more_expr '}'
   24     | CASE expr OF case_branch_list ESAC
   25     | NEW TYPEID
   26     | ISVOID expr
   27     | expr '+' expr
   28     | expr '-' expr
   29     | expr '*' expr
   30     | expr '/' expr
   31     | '~' expr
   32     | expr '<' expr
   33     | expr LE expr
   34     | expr '=' expr
   35     | NOT expr
   36     | '{' one_or_more_expr '}'
   37     | OBJECTID
   38     | INT_CONST
   39     | STR_CONST
   40     | BOOL_CONST

   41 one_or_more_expr: expr ';'
   42                 | one_or_more_expr expr ';'

   43 comma_sep_expr: expr
   44               | comma_sep_expr ',' expr

   45 case_branch_list: case_branch
   46                 | case_branch_list case_branch

   47 case_branch: OBJECTID ':' TYPEID DARROW expr


Terminals, with rules where they appear

$end (0) 0
'(' (40) 10 18 19 20
')' (41) 10 18 19 20
'*' (42) 29
'+' (43) 27
',' (44) 14 44
'-' (45) 28
'.' (46) 18 19
'/' (47) 30
':' (58) 10 11 12 16 47
';' (59) 4 5 8 9 41 42
'<' (60) 32
'=' (61) 34
'@' (64) 19
'{' (123) 4 5 10 23 36
'}' (125) 4 5 10 23 36
'~' (126) 31
error (256)
CLASS (258) 4 5
ELSE (259) 21
FI (260) 21
IF (261) 21
IN (262)
INHERITS (263) 5
LET (264)
LOOP (265) 22
POOL (266) 22
THEN (267) 21
WHILE (268) 22
CASE (269) 24
ESAC (270) 24
OF (271) 24
DARROW (272) 47
NEW (273) 25
ISVOID (274) 26
STR_CONST (275) 39
INT_CONST (276) 38
BOOL_CONST (277) 40
TYPEID (278) 4 5 10 11 12 16 19 25 47
OBJECTID (279) 10 11 12 16 17 18 19 20 37 47
ASSIGN (280) 12 17
NOT (281) 35
LE (282) 33
ERROR (283)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
class_list (47)
    on left: 2 3, on right: 1 3
class (48)
    on left: 4 5, on right: 2 3
features_opt (49)
    on left: 6 7, on right: 4 5
features (50)
    on left: 8 9, on right: 6 9
feature (51)
    on left: 10 11 12, on right: 8 9
formals (52)
    on left: 13 14 15, on right: 10 14
formal (53)
    on left: 16, on right: 13 14
expr (54)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34
    35 36 37 38 39 40, on right: 10 12 17 18 19 21 22 24 26 27 28 29
    30 31 32 33 34 35 41 42 43 44 47
one_or_more_expr (55)
    on left: 41 42, on right: 23 36 42
comma_sep_expr (56)
    on left: 43 44, on right: 18 19 20 44
case_branch_list (57)
    on left: 45 46, on right: 24 46
case_branch (58)
    on left: 47, on right: 45 46


state 0

    0 $accept: . program $end

    CLASS  shift, and go to state 1

    program     go to state 2
    class_list  go to state 3
    class       go to state 4


state 1

    4 class: CLASS . TYPEID '{' features_opt '}' ';'
    5      | CLASS . TYPEID INHERITS TYPEID '{' features_opt '}' ';'

    TYPEID  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 1

    $default  reduce using rule 1 (program)

    class  go to state 7


state 4

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


state 5

    4 class: CLASS TYPEID . '{' features_opt '}' ';'
    5      | CLASS TYPEID . INHERITS TYPEID '{' features_opt '}' ';'

    INHERITS  shift, and go to state 8
    '{'       shift, and go to state 9


state 6

    0 $accept: program $end .

    $default  accept


state 7

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


state 8

    5 class: CLASS TYPEID INHERITS . TYPEID '{' features_opt '}' ';'

    TYPEID  shift, and go to state 10


state 9

    4 class: CLASS TYPEID '{' . features_opt '}' ';'

    OBJECTID  shift, and go to state 11

    $default  reduce using rule 7 (features_opt)

    features_opt  go to state 12
    features      go to state 13
    feature       go to state 14


state 10

    5 class: CLASS TYPEID INHERITS TYPEID . '{' features_opt '}' ';'

    '{'  shift, and go to state 15


state 11

   10 feature: OBJECTID . '(' formals ')' ':' TYPEID '{' expr '}'
   11        | OBJECTID . ':' TYPEID
   12        | OBJECTID . ':' TYPEID ASSIGN expr

    '('  shift, and go to state 16
    ':'  shift, and go to state 17


state 12

    4 class: CLASS TYPEID '{' features_opt . '}' ';'

    '}'  shift, and go to state 18


state 13

    6 features_opt: features .
    9 features: features . feature ';'

    OBJECTID  shift, and go to state 11

    $default  reduce using rule 6 (features_opt)

    feature  go to state 19


state 14

    8 features: feature . ';'

    ';'  shift, and go to state 20


state 15

    5 class: CLASS TYPEID INHERITS TYPEID '{' . features_opt '}' ';'

    OBJECTID  shift, and go to state 11

    $default  reduce using rule 7 (features_opt)

    features_opt  go to state 21
    features      go to state 13
    feature       go to state 14


state 16

   10 feature: OBJECTID '(' . formals ')' ':' TYPEID '{' expr '}'

    OBJECTID  shift, and go to state 22

    $default  reduce using rule 15 (formals)

    formals  go to state 23
    formal   go to state 24


state 17

   11 feature: OBJECTID ':' . TYPEID
   12        | OBJECTID ':' . TYPEID ASSIGN expr

    TYPEID  shift, and go to state 25


state 18

    4 class: CLASS TYPEID '{' features_opt '}' . ';'

    ';'  shift, and go to state 26


state 19

    9 features: features feature . ';'

    ';'  shift, and go to state 27


state 20

    8 features: feature ';' .

    $default  reduce using rule 8 (features)


state 21

    5 class: CLASS TYPEID INHERITS TYPEID '{' features_opt . '}' ';'

    '}'  shift, and go to state 28


state 22

   16 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 29


state 23

   10 feature: OBJECTID '(' formals . ')' ':' TYPEID '{' expr '}'
   14 formals: formals . ',' formal

    ')'  shift, and go to state 30
    ','  shift, and go to state 31


state 24

   13 formals: formal .

    $default  reduce using rule 13 (formals)


state 25

   11 feature: OBJECTID ':' TYPEID .
   12        | OBJECTID ':' TYPEID . ASSIGN expr

    ASSIGN  shift, and go to state 32

    $default  reduce using rule 11 (feature)


state 26

    4 class: CLASS TYPEID '{' features_opt '}' ';' .

    $default  reduce using rule 4 (class)


state 27

    9 features: features feature ';' .

    $default  reduce using rule 9 (features)


state 28

    5 class: CLASS TYPEID INHERITS TYPEID '{' features_opt '}' . ';'

    ';'  shift, and go to state 33


state 29

   16 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 34


state 30

   10 feature: OBJECTID '(' formals ')' . ':' TYPEID '{' expr '}'

    ':'  shift, and go to state 35


state 31

   14 formals: formals ',' . formal

    OBJECTID  shift, and go to state 22

    formal  go to state 36


state 32

   12 feature: OBJECTID ':' TYPEID ASSIGN . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 49


state 33

    5 class: CLASS TYPEID INHERITS TYPEID '{' features_opt '}' ';' .

    $default  reduce using rule 5 (class)


state 34

   16 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 16 (formal)


state 35

   10 feature: OBJECTID '(' formals ')' ':' . TYPEID '{' expr '}'

    TYPEID  shift, and go to state 50


state 36

   14 formals: formals ',' formal .

    $default  reduce using rule 14 (formals)


state 37

   21 expr: IF . expr THEN expr ELSE expr FI

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 51


state 38

   22 expr: WHILE . expr LOOP expr POOL

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 52


state 39

   24 expr: CASE . expr OF case_branch_list ESAC

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 53


state 40

   25 expr: NEW . TYPEID

    TYPEID  shift, and go to state 54


state 41

   26 expr: ISVOID . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 55


state 42

   39 expr: STR_CONST .

    $default  reduce using rule 39 (expr)


state 43

   38 expr: INT_CONST .

    $default  reduce using rule 38 (expr)


state 44

   40 expr: BOOL_CONST .

    $default  reduce using rule 40 (expr)


state 45

   17 expr: OBJECTID . ASSIGN expr
   20     | OBJECTID . '(' comma_sep_expr ')'
   37     | OBJECTID .

    ASSIGN  shift, and go to state 56
    '('     shift, and go to state 57

    $default  reduce using rule 37 (expr)


state 46

   35 expr: NOT . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 58


state 47

   31 expr: '~' . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 59


state 48

   23 expr: '{' . one_or_more_expr '}'
   36     | '{' . one_or_more_expr '}'

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr              go to state 60
    one_or_more_expr  go to state 61


state 49

   12 feature: OBJECTID ':' TYPEID ASSIGN expr .
   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr

    LE   shift, and go to state 62
    '.'  shift, and go to state 63
    '@'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '<'  shift, and go to state 69
    '='  shift, and go to state 70

    $default  reduce using rule 12 (feature)


state 50

   10 feature: OBJECTID '(' formals ')' ':' TYPEID . '{' expr '}'

    '{'  shift, and go to state 71


state 51

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   21     | IF expr . THEN expr ELSE expr FI
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr

    THEN  shift, and go to state 72
    LE    shift, and go to state 62
    '.'   shift, and go to state 63
    '@'   shift, and go to state 64
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '+'   shift, and go to state 67
    '-'   shift, and go to state 68
    '<'   shift, and go to state 69
    '='   shift, and go to state 70


state 52

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   22     | WHILE expr . LOOP expr POOL
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr

    LOOP  shift, and go to state 73
    LE    shift, and go to state 62
    '.'   shift, and go to state 63
    '@'   shift, and go to state 64
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '+'   shift, and go to state 67
    '-'   shift, and go to state 68
    '<'   shift, and go to state 69
    '='   shift, and go to state 70


state 53

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   24     | CASE expr . OF case_branch_list ESAC
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr

    OF   shift, and go to state 74
    LE   shift, and go to state 62
    '.'  shift, and go to state 63
    '@'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '<'  shift, and go to state 69
    '='  shift, and go to state 70


state 54

   25 expr: NEW TYPEID .

    $default  reduce using rule 25 (expr)


state 55

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   26     | ISVOID expr .
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr

    LE   shift, and go to state 62
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '<'  shift, and go to state 69
    '='  shift, and go to state 70

    $default  reduce using rule 26 (expr)


state 56

   17 expr: OBJECTID ASSIGN . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 75


state 57

   20 expr: OBJECTID '(' . comma_sep_expr ')'

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr            go to state 76
    comma_sep_expr  go to state 77


state 58

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr
   35     | NOT expr .

    $default  reduce using rule 35 (expr)


state 59

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   31     | '~' expr .
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr

    LE   shift, and go to state 62
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '<'  shift, and go to state 69
    '='  shift, and go to state 70

    $default  reduce using rule 31 (expr)


state 60

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr
   41 one_or_more_expr: expr . ';'

    LE   shift, and go to state 62
    '.'  shift, and go to state 63
    '@'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '<'  shift, and go to state 69
    '='  shift, and go to state 70
    ';'  shift, and go to state 78


state 61

   23 expr: '{' one_or_more_expr . '}'
   36     | '{' one_or_more_expr . '}'
   42 one_or_more_expr: one_or_more_expr . expr ';'

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48
    '}'         shift, and go to state 79

    expr  go to state 80


state 62

   33 expr: expr LE . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 81


state 63

   18 expr: expr '.' . OBJECTID '(' comma_sep_expr ')'

    OBJECTID  shift, and go to state 82


state 64

   19 expr: expr '@' . TYPEID '.' OBJECTID '(' comma_sep_expr ')'

    TYPEID  shift, and go to state 83


state 65

   29 expr: expr '*' . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 84


state 66

   30 expr: expr '/' . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 85


state 67

   27 expr: expr '+' . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 86


state 68

   28 expr: expr '-' . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 87


state 69

   32 expr: expr '<' . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 88


state 70

   34 expr: expr '=' . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 89


state 71

   10 feature: OBJECTID '(' formals ')' ':' TYPEID '{' . expr '}'

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 90


state 72

   21 expr: IF expr THEN . expr ELSE expr FI

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 91


state 73

   22 expr: WHILE expr LOOP . expr POOL

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 92


state 74

   24 expr: CASE expr OF . case_branch_list ESAC

    OBJECTID  shift, and go to state 93

    case_branch_list  go to state 94
    case_branch       go to state 95


state 75

   17 expr: OBJECTID ASSIGN expr .
   18     | expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr

    $default  reduce using rule 17 (expr)


state 76

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr
   43 comma_sep_expr: expr .

    LE   shift, and go to state 62
    '.'  shift, and go to state 63
    '@'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '<'  shift, and go to state 69
    '='  shift, and go to state 70

    $default  reduce using rule 43 (comma_sep_expr)


state 77

   20 expr: OBJECTID '(' comma_sep_expr . ')'
   44 comma_sep_expr: comma_sep_expr . ',' expr

    ')'  shift, and go to state 96
    ','  shift, and go to state 97


state 78

   41 one_or_more_expr: expr ';' .

    $default  reduce using rule 41 (one_or_more_expr)


state 79

   23 expr: '{' one_or_more_expr '}' .
   36     | '{' one_or_more_expr '}' .

    ELSE      reduce using rule 23 (expr)
    ELSE      [reduce using rule 36 (expr)]
    FI        reduce using rule 23 (expr)
    FI        [reduce using rule 36 (expr)]
    LOOP      reduce using rule 23 (expr)
    LOOP      [reduce using rule 36 (expr)]
    POOL      reduce using rule 23 (expr)
    POOL      [reduce using rule 36 (expr)]
    THEN      reduce using rule 23 (expr)
    THEN      [reduce using rule 36 (expr)]
    ESAC      reduce using rule 23 (expr)
    ESAC      [reduce using rule 36 (expr)]
    OF        reduce using rule 23 (expr)
    OF        [reduce using rule 36 (expr)]
    OBJECTID  reduce using rule 23 (expr)
    OBJECTID  [reduce using rule 36 (expr)]
    LE        reduce using rule 23 (expr)
    LE        [reduce using rule 36 (expr)]
    '.'       reduce using rule 23 (expr)
    '.'       [reduce using rule 36 (expr)]
    '@'       reduce using rule 23 (expr)
    '@'       [reduce using rule 36 (expr)]
    '*'       reduce using rule 23 (expr)
    '*'       [reduce using rule 36 (expr)]
    '/'       reduce using rule 23 (expr)
    '/'       [reduce using rule 36 (expr)]
    '+'       reduce using rule 23 (expr)
    '+'       [reduce using rule 36 (expr)]
    '-'       reduce using rule 23 (expr)
    '-'       [reduce using rule 36 (expr)]
    '<'       reduce using rule 23 (expr)
    '<'       [reduce using rule 36 (expr)]
    '='       reduce using rule 23 (expr)
    '='       [reduce using rule 36 (expr)]
    '}'       reduce using rule 23 (expr)
    '}'       [reduce using rule 36 (expr)]
    ';'       reduce using rule 23 (expr)
    ';'       [reduce using rule 36 (expr)]
    ')'       reduce using rule 23 (expr)
    ')'       [reduce using rule 36 (expr)]
    ','       reduce using rule 23 (expr)
    ','       [reduce using rule 36 (expr)]
    $default  reduce using rule 23 (expr)


state 80

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr
   42 one_or_more_expr: one_or_more_expr expr . ';'

    LE   shift, and go to state 62
    '.'  shift, and go to state 63
    '@'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '<'  shift, and go to state 69
    '='  shift, and go to state 70
    ';'  shift, and go to state 98


state 81

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   33     | expr LE expr .
   34     | expr . '=' expr

    $default  reduce using rule 33 (expr)


state 82

   18 expr: expr '.' OBJECTID . '(' comma_sep_expr ')'

    '('  shift, and go to state 99


state 83

   19 expr: expr '@' TYPEID . '.' OBJECTID '(' comma_sep_expr ')'

    '.'  shift, and go to state 100


state 84

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   29     | expr '*' expr .
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr

    LE   shift, and go to state 62
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '<'  shift, and go to state 69
    '='  shift, and go to state 70

    $default  reduce using rule 29 (expr)


state 85

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   30     | expr '/' expr .
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr

    LE   shift, and go to state 62
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '<'  shift, and go to state 69
    '='  shift, and go to state 70

    $default  reduce using rule 30 (expr)


state 86

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   27     | expr . '+' expr
   27     | expr '+' expr .
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr

    LE   shift, and go to state 62
    '<'  shift, and go to state 69
    '='  shift, and go to state 70

    $default  reduce using rule 27 (expr)


state 87

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   27     | expr . '+' expr
   28     | expr . '-' expr
   28     | expr '-' expr .
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr

    LE   shift, and go to state 62
    '<'  shift, and go to state 69
    '='  shift, and go to state 70

    $default  reduce using rule 28 (expr)


state 88

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   32     | expr '<' expr .
   33     | expr . LE expr
   34     | expr . '=' expr

    $default  reduce using rule 32 (expr)


state 89

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr
   34     | expr '=' expr .

    $default  reduce using rule 34 (expr)


state 90

   10 feature: OBJECTID '(' formals ')' ':' TYPEID '{' expr . '}'
   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr

    LE   shift, and go to state 62
    '.'  shift, and go to state 63
    '@'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '<'  shift, and go to state 69
    '='  shift, and go to state 70
    '}'  shift, and go to state 101


state 91

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   21     | IF expr THEN expr . ELSE expr FI
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr

    ELSE  shift, and go to state 102
    LE    shift, and go to state 62
    '.'   shift, and go to state 63
    '@'   shift, and go to state 64
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '+'   shift, and go to state 67
    '-'   shift, and go to state 68
    '<'   shift, and go to state 69
    '='   shift, and go to state 70


state 92

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   22     | WHILE expr LOOP expr . POOL
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr

    POOL  shift, and go to state 103
    LE    shift, and go to state 62
    '.'   shift, and go to state 63
    '@'   shift, and go to state 64
    '*'   shift, and go to state 65
    '/'   shift, and go to state 66
    '+'   shift, and go to state 67
    '-'   shift, and go to state 68
    '<'   shift, and go to state 69
    '='   shift, and go to state 70


state 93

   47 case_branch: OBJECTID . ':' TYPEID DARROW expr

    ':'  shift, and go to state 104


state 94

   24 expr: CASE expr OF case_branch_list . ESAC
   46 case_branch_list: case_branch_list . case_branch

    ESAC      shift, and go to state 105
    OBJECTID  shift, and go to state 93

    case_branch  go to state 106


state 95

   45 case_branch_list: case_branch .

    $default  reduce using rule 45 (case_branch_list)


state 96

   20 expr: OBJECTID '(' comma_sep_expr ')' .

    $default  reduce using rule 20 (expr)


state 97

   44 comma_sep_expr: comma_sep_expr ',' . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 107


state 98

   42 one_or_more_expr: one_or_more_expr expr ';' .

    $default  reduce using rule 42 (one_or_more_expr)


state 99

   18 expr: expr '.' OBJECTID '(' . comma_sep_expr ')'

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr            go to state 76
    comma_sep_expr  go to state 108


state 100

   19 expr: expr '@' TYPEID '.' . OBJECTID '(' comma_sep_expr ')'

    OBJECTID  shift, and go to state 109


state 101

   10 feature: OBJECTID '(' formals ')' ':' TYPEID '{' expr '}' .

    $default  reduce using rule 10 (feature)


state 102

   21 expr: IF expr THEN expr ELSE . expr FI

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 110


state 103

   22 expr: WHILE expr LOOP expr POOL .

    $default  reduce using rule 22 (expr)


state 104

   47 case_branch: OBJECTID ':' . TYPEID DARROW expr

    TYPEID  shift, and go to state 111


state 105

   24 expr: CASE expr OF case_branch_list ESAC .

    $default  reduce using rule 24 (expr)


state 106

   46 case_branch_list: case_branch_list case_branch .

    $default  reduce using rule 46 (case_branch_list)


state 107

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr
   44 comma_sep_expr: comma_sep_expr ',' expr .

    LE   shift, and go to state 62
    '.'  shift, and go to state 63
    '@'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '<'  shift, and go to state 69
    '='  shift, and go to state 70

    $default  reduce using rule 44 (comma_sep_expr)


state 108

   18 expr: expr '.' OBJECTID '(' comma_sep_expr . ')'
   44 comma_sep_expr: comma_sep_expr . ',' expr

    ')'  shift, and go to state 112
    ','  shift, and go to state 97


state 109

   19 expr: expr '@' TYPEID '.' OBJECTID . '(' comma_sep_expr ')'

    '('  shift, and go to state 113


state 110

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   21     | IF expr THEN expr ELSE expr . FI
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr

    FI   shift, and go to state 114
    LE   shift, and go to state 62
    '.'  shift, and go to state 63
    '@'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '<'  shift, and go to state 69
    '='  shift, and go to state 70


state 111

   47 case_branch: OBJECTID ':' TYPEID . DARROW expr

    DARROW  shift, and go to state 115


state 112

   18 expr: expr '.' OBJECTID '(' comma_sep_expr ')' .

    $default  reduce using rule 18 (expr)


state 113

   19 expr: expr '@' TYPEID '.' OBJECTID '(' . comma_sep_expr ')'

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr            go to state 76
    comma_sep_expr  go to state 116


state 114

   21 expr: IF expr THEN expr ELSE expr FI .

    $default  reduce using rule 21 (expr)


state 115

   47 case_branch: OBJECTID ':' TYPEID DARROW . expr

    IF          shift, and go to state 37
    WHILE       shift, and go to state 38
    CASE        shift, and go to state 39
    NEW         shift, and go to state 40
    ISVOID      shift, and go to state 41
    STR_CONST   shift, and go to state 42
    INT_CONST   shift, and go to state 43
    BOOL_CONST  shift, and go to state 44
    OBJECTID    shift, and go to state 45
    NOT         shift, and go to state 46
    '~'         shift, and go to state 47
    '{'         shift, and go to state 48

    expr  go to state 117


state 116

   19 expr: expr '@' TYPEID '.' OBJECTID '(' comma_sep_expr . ')'
   44 comma_sep_expr: comma_sep_expr . ',' expr

    ')'  shift, and go to state 118
    ','  shift, and go to state 97


state 117

   18 expr: expr . '.' OBJECTID '(' comma_sep_expr ')'
   19     | expr . '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')'
   27     | expr . '+' expr
   28     | expr . '-' expr
   29     | expr . '*' expr
   30     | expr . '/' expr
   32     | expr . '<' expr
   33     | expr . LE expr
   34     | expr . '=' expr
   47 case_branch: OBJECTID ':' TYPEID DARROW expr .

    LE   shift, and go to state 62
    '.'  shift, and go to state 63
    '@'  shift, and go to state 64
    '*'  shift, and go to state 65
    '/'  shift, and go to state 66
    '+'  shift, and go to state 67
    '-'  shift, and go to state 68
    '<'  shift, and go to state 69
    '='  shift, and go to state 70

    $default  reduce using rule 47 (case_branch)


state 118

   19 expr: expr '@' TYPEID '.' OBJECTID '(' comma_sep_expr ')' .

    $default  reduce using rule 19 (expr)
